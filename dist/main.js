(()=>{var e={169:(e,n,t)=>{"use strict";t.d(n,{Z:()=>c});var r=t(15),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Quicksand:wght@300;600&display=swap);"]),i.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Dancing+Script:wght@700&display=swap);"]),i.push([e.id,"*{margin:0;padding:0;box-sizing:border-box}body{font-family:'Quicksand', sans-serif}li{list-style:none;color:white;margin:0 2rem;padding:1rem 1.5rem;font-size:1rem;font-weight:600}a{text-decoration:none}h1{color:#fff;font-family:'Dancing Script', cursive;font-size:2.5rem}button{border-radius:2.5rem;cursor:pointer;color:#fff;background:transparent;padding:1rem 2.5rem;margin:2rem 0;border:2px solid #fff;font-size:1.2rem;font-family:'Quicksand', sans-serif}header{background-color:black;height:95vh;background-position:center;background-repeat:no-repeat;background-size:cover}header img{width:100%;height:100%;object-fit:cover;opacity:0.3}nav{width:100%;color:white;padding:1rem 2rem;position:absolute;top:0;left:0;right:0;background-color:rgba(0,0,0,0.5);box-shadow:1px 1px 1px 1px rgba(0,0,0,0.2)}li:hover,li:active{background:white;color:#000;border-radius:.2rem;cursor:pointer}.text-center{text-align:center}.d-flex{display:flex}.d-grid{display:grid}.jc-space-between{justify-content:space-between}.ac-center{align-items:center}.container{margin:1rem auto;width:90%}.uppercase{text-transform:uppercase}.active{background-color:rgba(0,0,0,0.5)}.spl-text{margin-bottom:1rem;color:#FAC836;font-family:'Dancing Script', cursive;font-size:6rem}.hero-container{width:50rem;height:auto;position:absolute;top:12rem;left:20rem}.hero-container p{font-size:1.2rem;margin-bottom:1rem;color:#fff;letter-spacing:1px}.hero-container .lead{font-weight:600;font-size:3rem;color:#fff}section{padding:2rem 0;grid-template-columns:1fr 2fr 1fr;height:100vh;grid-column-gap:3rem}section .about-img2{order:3}section .abt-info{margin-top:2rem}section .abt-info p{margin-bottom:1rem;font-weight:600;font-size:1.6rem}section .abt-info .about-text{font-weight:300;font-size:1.1rem;line-height:2rem}section .abt-info .about-btn{background:black;color:#fff}.about-img{width:100%;height:auto}.about-img img{width:100%;height:100%;object-fit:cover}footer{background:#101012}footer p{color:#fff;padding:2rem}\n","",{version:3,sources:["webpack://./src/main.scss"],names:[],mappings:"AAKA,EACE,QAAQ,CACR,SAAS,CACT,qBAAsB,CACvB,KAGC,mCAAoC,CAErC,GAGC,eAAe,CACf,WAAW,CACX,aAAc,CACd,mBAAoB,CACpB,cAAe,CACf,eAAe,CAChB,EAGC,oBAAoB,CACrB,GAGC,UA3BW,CA4BX,qCAAsC,CACtC,gBAAiB,CAClB,OAGC,oBAAqB,CACrB,cAAe,CACb,UAnCS,CAoCT,sBAAuB,CACvB,mBAAoB,CACpB,aAAa,CACb,qBAvCS,CAwCT,gBAAgB,CAChB,mCAAoC,CACvC,OAIC,sBAAuB,CACvB,WAAY,CACZ,0BAA2B,CAC3B,2BAA4B,CAC5B,qBAAsB,CALxB,WAQI,UAAU,CACV,WAAY,CACZ,gBAAiB,CACjB,WAAY,CACb,IAKD,UAAU,CACV,WAAW,CACX,iBAAkB,CAClB,iBAAkB,CAClB,KAAK,CACL,MAAM,CACN,OAAO,CACP,gCAAmC,CACnC,0CAA8C,CAC/C,mBAGC,gBAAiB,CACjB,UAAU,CACV,mBAAoB,CACpB,cAAe,CAChB,aAGC,iBAAkB,CACnB,QAGC,YAAY,CACb,QAGA,YAAa,CACb,kBAGC,6BAA8B,CAC/B,WAGC,kBAAmB,CACpB,WAGC,gBAAgB,CAChB,SAAS,CACV,WAGC,wBAAyB,CAC1B,QAEC,gCAAmC,CACpC,UAIG,kBAAkB,CAClB,aAAa,CACb,qCAAsC,CACtC,cAAc,CACjB,gBAKA,WAAW,CACX,WAAY,CACZ,iBAAiB,CACjB,SAAS,CACT,UAAU,CALX,kBASE,gBAAgB,CAChB,kBAAkB,CAClB,UArIW,CAsIX,kBAAmB,CAZrB,sBAgBG,eAAe,CACf,cAAc,CACd,UA5IU,CA6IX,QAMA,cAAc,CACd,iCAAkC,CAClC,YAAY,CACZ,oBAAqB,CAJvB,oBAMI,OAAO,CANX,kBASI,eAAgB,CATpB,oBAWM,kBAAmB,CACnB,eAAgB,CAChB,gBAAgB,CAbtB,8BAgBM,eAAgB,CAChB,gBAAgB,CAChB,gBAAgB,CAlBtB,6BAqBM,gBAAgB,CAChB,UAxKO,CAyKR,WAQH,UAAU,CACV,WAAW,CAFb,eAMI,UAAU,CACV,WAAY,CACZ,gBAAiB,CAClB,OAMD,kBAAkB,CADpB,SAII,UAlMS,CAmMT,YAAa",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300;600&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Dancing+Script:wght@700&display=swap');\n\n$white: white;\n\n*{\n  margin:0;\n  padding:0;\n  box-sizing: border-box;\n}\n\nbody{\n  font-family: 'Quicksand', sans-serif;\n\n}\n\nli{\n  list-style:none;\n  color:white;\n  margin: 0 2rem;\n  padding:1rem 1.5rem ;\n  font-size: 1rem;\n  font-weight:600;\n}\n\na{\n  text-decoration:none;\n}\n\nh1{\n  color:$white;\n  font-family: 'Dancing Script', cursive;\n  font-size: 2.5rem;\n}\n\nbutton{\n  border-radius: 2.5rem;\n  cursor: pointer;\n    color:$white;\n    background: transparent;\n    padding: 1rem 2.5rem;\n    margin:2rem 0;\n    border:2px solid $white;\n    font-size:1.2rem;\n    font-family: 'Quicksand', sans-serif; \n}\n\n\nheader{\n  background-color: black; /* Used if the image is unavailable */\n  height: 95vh; /* You must set a specified height */\n  background-position: center; /* Center the image */\n  background-repeat: no-repeat; /* Do not repeat the image */\n  background-size: cover; \n  \n  img{\n    width:100%;\n    height: 100%;\n    object-fit: cover;\n    opacity: 0.3;\n  }\n}\n\n\nnav{\n  width:100%;\n  color:white;\n  padding: 1rem 2rem;\n  position: absolute;\n  top:0;\n  left:0;\n  right:0;\n  background-color:rgba(0, 0, 0, 0.5);\n  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.2)\n}\n\nli:hover, li:active{\n  background: white;\n  color:#000;\n  border-radius: .2rem;\n  cursor: pointer;\n}\n\n.text-center{\n  text-align: center;\n}\n\n.d-flex{\n  display:flex;\n}\n\n.d-grid{\n display: grid; \n}\n\n.jc-space-between{\n  justify-content: space-between;\n}\n\n.ac-center{\n  align-items: center;\n}\n\n.container{\n  margin:1rem auto;\n  width:90%;\n}\n\n.uppercase{\n  text-transform: uppercase;\n}\n.active{\n  background-color:rgba(0, 0, 0, 0.5);\n}\n\n.spl-text{\n  \n    margin-bottom:1rem;\n    color:#FAC836;\n    font-family: 'Dancing Script', cursive;\n    font-size:6rem;\n}\n\n\n\n.hero-container{\n width:50rem;\n height: auto;\n position:absolute;\n top:12rem;\n left:20rem;\n\n \n p{\n  font-size:1.2rem;\n  margin-bottom:1rem;\n  color:$white;\n  letter-spacing: 1px;\n}\n\n .lead{\n   font-weight:600;\n   font-size:3rem;\n   color:$white;\n }\n \n \n}\n\nsection{\n  padding:2rem 0; \n  grid-template-columns: 1fr 2fr 1fr;\n  height:100vh;\n  grid-column-gap: 3rem;\n  .about-img2{\n    order:3;\n  }\n  .abt-info{\n    margin-top: 2rem;\n    p{\n      margin-bottom: 1rem;\n      font-weight: 600;\n      font-size:1.6rem;\n    }\n    .about-text{\n      font-weight: 300;\n      font-size:1.1rem;\n      line-height:2rem;\n    }\n    .about-btn{\n      background:black;\n      color:$white;\n    }\n  }\n  \n  \n  \n}\n\n.about-img {\n  width:100%;\n  height:auto;\n \n  \n  img{\n    width:100%;\n    height: 100%;\n    object-fit: cover;\n  }\n}\n\n\n\nfooter{\n  background:#101012;\n  \n  p{\n    color:$white;\n    padding: 2rem;\n  }\n}\n\n\n\n"],sourceRoot:""}]);const c=i},645:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=e(n);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(o[i]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);r&&o[s[0]]||(t&&(s[2]?s[2]="".concat(t," and ").concat(s[2]):s[2]=t),n.push(s))}},n}},15:e=>{"use strict";function n(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}e.exports=function(e){var t,r,o=(r=4,function(e){if(Array.isArray(e))return e}(t=e)||function(e,n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],r=!0,o=!1,a=void 0;try{for(var i,c=e[Symbol.iterator]();!(r=(i=c.next()).done)&&(t.push(i.value),!n||t.length!==n);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==c.return||c.return()}finally{if(o)throw a}}return t}}(t,r)||function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[1],i=o[3];if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),l="/*# ".concat(s," */"),d=i.sources.map((function(e){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(e," */")}));return[a].concat(d).concat([l]).join("\n")}return[a].join("\n")}},357:e=>{e.exports="images/about2.38a312.jpg"},817:e=>{e.exports="images/contact.9f8256.jpg"},812:e=>{e.exports="images/fruitfitta.14a0ad.jpg"},885:e=>{e.exports="images/home.ef9589.jpg"},828:e=>{e.exports="images/menu.a3a184.jpg"},515:e=>{e.exports="images/pizzarina.6985de.jpg"},852:e=>{e.exports="images/spagettini.2d531a.jpg"},827:e=>{e.exports="images/vegetables.e17d28.jpg"},379:(e,n,t)=>{"use strict";var r,o=function(){var e={};return function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}e[n]=t}return e[n]}}(),a=[];function i(e){for(var n=-1,t=0;t<a.length;t++)if(a[t].identifier===e){n=t;break}return n}function c(e,n){for(var t={},r=[],o=0;o<e.length;o++){var c=e[o],s=n.base?c[0]+n.base:c[0],l=t[s]||0,d="".concat(s," ").concat(l);t[s]=l+1;var A=i(d),m={css:c[1],media:c[2],sourceMap:c[3]};-1!==A?(a[A].references++,a[A].updater(m)):a.push({identifier:d,updater:C(m,n),references:1}),r.push(d)}return r}function s(e){var n=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var a=t.nc;a&&(r.nonce=a)}if(Object.keys(r).forEach((function(e){n.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(n);else{var i=o(e.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}return n}var l,d=(l=[],function(e,n){return l[e]=n,l.filter(Boolean).join("\n")});function A(e,n,t,r){var o=t?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=d(n,o);else{var a=document.createTextNode(o),i=e.childNodes;i[n]&&e.removeChild(i[n]),i.length?e.insertBefore(a,i[n]):e.appendChild(a)}}function m(e,n,t){var r=t.css,o=t.media,a=t.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var u=null,p=0;function C(e,n){var t,r,o;if(n.singleton){var a=p++;t=u||(u=s(n)),r=A.bind(null,t,a,!1),o=A.bind(null,t,a,!0)}else t=s(n),r=m.bind(null,t,n),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)};return r(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;r(e=n)}else o()}}e.exports=function(e,n){(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var t=c(e=e||[],n);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<t.length;r++){var o=i(t[r]);a[o].references--}for(var s=c(e,n),l=0;l<t.length;l++){var d=i(t[l]);0===a[d].references&&(a[d].updater(),a.splice(d,1))}t=s}}}}},n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{"use strict";var e=t(379),n=t.n(e),r=t(169);n()(r.Z,{insert:"head",singleton:!1}),r.Z.locals;var o=t(885),a=t.n(o);const i=document.createElement("nav");i.className="d-flex jc-space-between ac-center";const c=document.createElement("h1");c.innerText="Emsam",i.appendChild(c);const s=document.createElement("ul");s.className="d-flex";let l=["Home","Menu","Contact"];for(let e=1;e<=3;e++){let n=document.createElement("li");n.className="nav-links ",n.id="nav-link-"+e,n.innerText=l[e-1],s.appendChild(n)}i.appendChild(s);const d=i,A=document.createElement("header");let m=document.createElement("img");m.src=a();let u=document.createElement("div");u.className="hero-container text-center";let p=document.createElement("h2");p.className="spl-text";let C=document.createElement("p");C.className="lead uppercase";let f=document.createElement("p"),g=document.createElement("button");p.innerText="Welcome",C.innerText="High Quality Meals",f.innerText="The home of mouth watering delicacies and cuisines made with lots of love",g.innerText="Book A table";let h=[p,C,f,g];for(let e=0;e<h.length;e++)u.appendChild(h[e]);A.appendChild(m),A.appendChild(d),A.appendChild(u);const b=A;var B=t(357),v=t.n(B),y=t(812),x=t.n(y);const w=(e,n)=>{for(let t=0;t<n.length;t++)e.appendChild(n[t]);return e},k=document.createElement("main"),E=document.createElement("section");E.id="about",E.className="container d-grid ";const S=document.createElement("div");S.className="about-img";const j=document.createElement("img");j.src=v(),S.appendChild(j);const T=document.createElement("div");T.className="text-center abt-info ";const U=document.createElement("h3");U.className="spl-text";const M=document.createElement("p"),N=document.createElement("p");N.className="about-text";const W=document.createElement("button");U.innerText="About Us",M.innerText="We make the best dishes with an added spice of love in ever dish",N.innerText="Welcome to Emsam’s, the celebrated Caribbean oasis with two locations in the heart of Lagos, and international outposts in Negril, Jamaica and Dubai, U.A.E. The  Emsam's family includes a lively Jamaican style Diner & Juice Bar and a Caribbean Rum Bar & Jerk Shack. The island connection runs deep at Emsam through its modern approach to classic Jamaican cooking, friendly and cool-as-can-be staff, and vibrant and colorful atmosphere.",W.innerText="Learn More",W.className="about-btn",w(T,[U,M,N,W]);const z=document.createElement("div");z.className="about-img about-img2";const I=document.createElement("img");I.src=x(),z.appendChild(I),w(E,[S,z,T]),k.appendChild(E);const q=k,O=document.createElement("footer");O.className="tc-center";const G=document.createElement("p");G.innerText="© 2020, All rights reserved, Emsam Restaurant Ltd",O.appendChild(G);const Q=O;var L=t(828),D=t.n(L),Y=t(817),R=t.n(Y);t(515),t(852),t(827);const Z=document.querySelector("#content"),$=()=>{Z.appendChild(b),Z.appendChild(q),Z.appendChild(Q)};$();const J=document.querySelector("#nav-link-1"),K=document.querySelector("#nav-link-2"),X=document.querySelector("#nav-link-3");J.addEventListener("click",(()=>{for(;Z.firstChild;)Z.removeChild(Z.firstChild);$()})),K.addEventListener("click",(()=>{document.querySelector("header img").src=D(),document.querySelector("header img").src=D(),(()=>{const e=document.querySelector("header div");for(;e.firstChild;)e.removeChild(e.firstChild);let n=document.createElement("h2"),t=document.createElement("p"),r=document.createElement("p"),o=document.createElement("button");n.innerText="Menu",t.innerText="High Quality Meals",n.className="lead uppercase",t.className="spl-text",r.innerText="Here is a list of our awesome meals and cuisines that make us stand out",o.innerText="Call Us";let a=[n,t,r,o];for(let n=0;n<a.length;n++)e.appendChild(a[n])})(),(()=>{const e=document.querySelector("section");for(;e.firstChild;)e.removeChild(e.firstChild)})()})),X.addEventListener("click",(()=>{document.querySelector("header img").src=R(),document.querySelector("main").style.background="purple"}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,